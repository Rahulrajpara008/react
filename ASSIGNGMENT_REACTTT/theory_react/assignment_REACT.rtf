{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang16393{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil Calibri;}{\f2\fnil\fcharset2 Symbol;}}
{\colortbl ;\red255\green0\blue0;\red0\green77\blue187;\red0\green0\blue0;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\ri-1350\sa200\sl276\slmult1\qc\b\f0\fs72\lang9 Module 9 - Introduction to React.js\b0\par

\pard\ri-1350\sa200\sl276\slmult1\b\fs48 THEORY EXERCISE\par
\cf1\f1\fs36\bullet  Question 1: \cf0 What is React.js? How is it different from other JavaScript frameworks and\f0\lang16393  \f1\lang9 libraries?\b0\par
\cf2\b\f0\lang16393 Ans :\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\ri-1350\sa200\sl276\slmult1\cf3 React.js (also known as React or ReactJS) is a free and open-source front-end JavaScript library used for building user interfaces (UIs).\par
{\pntext\f2\'B7\tab}It's maintained by Meta (formerly Facebook) and a community of developers and companies.\par
{\pntext\f2\'B7\tab}React allows you to build complex UIs by breaking them down into smaller, reusable components.\par
{\pntext\f2\'B7\tab}It's known for its performance, flexibility, and ease of use. \fs56\lang9\par
{\pntext\f2\'B7\tab}\cf0\fs36 Component-based architecture:\par

\pard\li720\ri-1350\sa200\sl276\slmult1\b0 React's core principle is building UIs with components. This promotes reusability, maintainability, and a clear structure.\b\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\ri-1350\sa200\sl276\slmult1 Virtual DOM:\par

\pard\li720\ri-1350\sa200\sl276\slmult1\b0 React utilizes a virtual representation of the actual DOM. This allows for efficient updates, as React only modifies the necessary parts of the real DOM when data changes.\b\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\ri-1350\sa200\sl276\slmult1 JSX:\par

\pard\li720\ri-1350\sa200\sl276\slmult1\b0 React uses JSX, an optional syntax extension that allows you to write HTML-like code within your JavaScript components. This makes the structure of your UI components more readable and intuitive.\par

\pard\ri-1350\sa200\sl276\slmult1\cf1\b\f1\bullet  Question 2:\cf0  Explain the core principles of React such as the virtual DOM and componentbased architecture.\b0\par
\cf2\b\f0\lang16393 Ans :\par
\cf3 Two core principles of React are the virtual DOM and component-based architecture: \b0\par
\b Virtual DOM\b0\par

\pard\li720\ri-1350\sa200\sl276\slmult1 A programming concept that creates a virtual representation of the DOM in memory. This allows React to efficiently update the DOM by only re-rendering components that have changed.\par

\pard\ri-1350\sa200\sl276\slmult1\b Component-based architecture\par

\pard\li720\ri-1350\sa200\sl276\slmult1\b0 Promotes a modular approach to building UIs by using reusable components. Each component encapsulates its own logic and state, making it easier to manage and maintain complex user interfaces.\par

\pard\ri-1350\sa200\sl276\slmult1\cf1\b\f1\bullet  Question 3: \cf3 What are the advantages of using React.js in web development?\b0\par
\cf2\b\f0 Ans :\cf3\b0\par

\pard\ri-1350\sa200\sl276\slmult1\tx568\b React.js has many advantages for web development, including: \b0\par

\pard\li720\ri-1350\sa200\sl276\slmult1\b SEO friendly\b0\par
React.js can run on the server, rendering and returning the virtual DOM to the browser as a regular webpage. This helps with search engine optimization (SEO). \par
\b Virtual DOM\b0\par
React.js's virtual DOM allows for quick and flexible development. It can duplicate a web page in its virtual memory, which makes rendering faster and enhances the user experience. \par
\b Strong community support\b0\par
React.js has a large, active community. \par
\b Code stability\b0\par
React.js's data flow design makes the UI components built with it predictable. \par
\b Easy to learn\b0\par
React.js comes with pre-built patterns and methods that can create rapid, appealing, and scalable solutions. \par
\par

\pard\li720\ri-1350\sa200\sl276\slmult1\qc\b\fs52 JSX (JavaScript XML)\b0\fs36\par

\pard\ri-1350\sa200\sl276\slmult1\cf1\b\f1\bullet  Question 1: \cf3 What is JSX in React.js? Why is it used?\par
\cf2\f0 Ans :\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\ri-1350\sa200\sl276\slmult1\cf3 Readability and Maintainability:\par

\pard\li720\ri-1350\sa200\sl276\slmult1\b0 JSX makes the structure of your React components more visually clear and similar to HTML, which improves code readability and maintainability.\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\ri-1350\sa200\sl276\slmult1\b Declarative Style:\par

\pard\li720\ri-1350\sa200\sl276\slmult1\b0 JSX encourages a declarative style of programming, where you describe what the UI should look like, rather than how to create it. This makes your code easier to understand and reason about.\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\ri-1350\sa200\sl276\slmult1\b Component-Based Architecture:\par

\pard\li720\ri-1350\sa200\sl276\slmult1\b0 JSX aligns well with React's component-based architecture. Each component can have its own JSX structure, making it easier to manage complex UIs.\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\ri-1350\sa200\sl276\slmult1\b Efficient Rendering:\b0\par

\pard\li720\ri-1350\sa200\sl276\slmult1\cf2\b\tab\cf3\b0 Under the hood, JSX is transformed into regular JavaScript function calls, which are optimized for React's virtual DOM rendering process. This results in efficient updates to the UI.\b\par

\pard\ri-1350\sa200\sl276\slmult1\b0\par
\cf1\b\f1\lang9\bullet  Question 2: \cf3 How is JSX different from regular JavaScript? Can you write JavaScript insideJSX?\par
\cf2\f0\lang16393 Ans :\par
\cf3\b0\lang9\tab\tab\tab JSX is a syntax extension for JavaScript \tab that allows you to write HTML-like code within \tab JavaScript.\par
\cf1\b\f1\bullet  Question 3\cf3 : Discuss the importance of using curly braces \{\} in JSX expressions.\par
\cf2\f0\lang16393 Ans :\par
\cf0\b0\tab In JSX, curly braces \{\} play a crucial role in embedding JavaScript expressions within your HTML-like syntax. Here's why they are important:\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\ri-1350\sa200\sl276\slmult1 1. Evaluating JavaScript:\par

\pard\li720\ri-1350\sa200\sl276\slmult1 Curly braces act as a signal to the JSX transpiler (like Babel) that the content within them should be treated as JavaScript code, not plain text.\par
This allows you to dynamically insert values, perform calculations, call functions, and use any valid JavaScript expression directly within your JSX markup.\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\ri-1350\sa200\sl276\slmult1 2. Dynamic Content:\par

\pard\li720\ri-1350\sa200\sl276\slmult1 One of the primary benefits of using curly braces is the ability to render dynamic content.\par
You can embed variables, data from props, or the result of function calls, making your UI components more interactive and responsive to changes in data.\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\ri-1350\sa200\sl276\slmult1 3. Conditional Rendering:\par

\pard\li720\ri-1350\sa200\sl276\slmult1 Curly braces enable you to implement conditional rendering logic within your JSX.\par
By using JavaScript expressions inside curly braces, you can conditionally display or hide elements based on specific conditions, such as the value of a variable or the result of a logical operation.\par

\pard\ri-1350\sa200\sl276\slmult1\cf1\b\f1\bullet  Question 1: \cf0 What are components in React? Explain the difference between functional\f0  \f1 components and class components.\par
\cf2\f0 Ans :\par

\pard\li720\ri-1350\sa200\sl276\slmult1\cf0 In React, components are the building blocks of user interfaces. They are independent, reusable pieces of code that let you split your UI into smaller, manageable parts.\b0\par

\pard\li720\ri-1350\sa200\sl276\slmult1\b Types of Components:\b0\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li1440\ri-1350\sa200\sl276\slmult1\b Functional Components:\b0\par

\pard\li1440\ri-1350\sa200\sl276\slmult1 These are JavaScript functions that accept props as an argument and return JSX elements. They are often used for presentational or stateless components.\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li1440\ri-1350\sa200\sl276\slmult1\b Class Components:\b0\par

\pard\li1440\ri-1350\sa200\sl276\slmult1 These are ES6 classes that extend from React.Component. They have a render() method that returns JSX elements and can manage state and lifecycle methods. \b\par

\pard\ri-1350\sa200\sl276\slmult1\cf1\f1\bullet  Question 2: \cf0 How do you pass data to a component using props?\par
\cf2\f0 Ans : \par
\cf0\b0\tab You can pass components the same way you'd pass any data in React. Needless to say, you will need curly braces to set component values for props. The Header component will render the Text component.\par
\cf1\b\f1\bullet  Question 3: \cf0\b0 What is the role of render() in class components?\par
\cf2\b\f0 Ans :\cf0\b0  \par
\tab  In React, the render() method in class components defines the user interface (UI) of a page .\par
\b The render() method: \par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\ri-1350\sa200\sl276\slmult1\b0 Defines HTML code within an HTML element \par
{\pntext\f2\'B7\tab}Displays views in the UI \par
{\pntext\f2\'B7\tab}Returns the output \par
{\pntext\f2\'B7\tab}Sets up the child component's initial state and lifecycle methods \fs56\lang9\par

\pard\li720\ri-1350\sa200\sl276\slmult1\b\f1\fs36\lang16393\par

\pard\li720\ri-1350\sa200\sl276\slmult1\qc\fs52 Props and State\par

\pard\ri-1350\sa200\sl276\slmult1\cf1\fs36\bullet  Question 1: \cf0 What are props in React.js? How are props different from state?\par
\cf2\f0 Ans : \par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\ri-1350\sa200\sl276\slmult1\cf0 PROPS\par

\pard\li720\ri-1350\sa200\sl276\slmult1\b0\tab Props are used to pass data from a parent component to a child component. They act like function parameters, allowing you to customize the behavior and appearance of child components.\par
\b Usage:\b0\par
Props are typically used to pass data like configuration settings, content, or other values that a child component needs to render\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\ri-1350\sa200\sl276\slmult1\b STATE\b0\par

\pard\li720\ri-1350\sa200\sl276\slmult1 State is used to manage data that is internal to a component and can change over time. It allows components to keep track of their own data and update their UI accordingly.\par
\b Usage:\b0\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li1440\ri-1350\sa200\sl276\slmult1 State is typically used for things like:\par
{\pntext\f2\'B7\tab}User input values\par
{\pntext\f2\'B7\tab}Dynamic data fetched from an API\par
{\pntext\f2\'B7\tab}Component-specific flags or counters \par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\ri-1350\sa200\sl276\slmult1\cf1\b Question 3: \cf0\b0 Why is this.setState() used in class components, and how does it work ?\par

\pard\ri-1350\sa200\sl276\slmult1\cf2\b Ans : \par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\ri-1350\sa200\sl276\slmult1\cf0\b0\tab The this.setState() method is used in React class components to update the component's state and trigger a re-render with the updated values\par
{\pntext\f2\'B7\tab}The this.setState() method enqueues changes to the component's state and informs React that the component and its children need to re-render with the updated state.\par

\pard\ri-1350\sa200\sl276\slmult1\par

\pard\li720\ri-1350\sa200\sl276\slmult1\par

\pard\ri-1350\sa200\sl276\slmult1\b\f1\par
}
 